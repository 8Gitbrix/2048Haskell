
==================== FINAL INTERFACE ====================
2017-12-05 06:32:58.602109 UTC

interface main@main:Main 8002
  interface hash: a5bc4310e723a7ddf24687a850de199c
  ABI hash: c57008d2757a7f1ba53344b4a100edd0
  export-list hash: 9f4b9e82bb672c2becbfeb959cc2fc3d
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 86d59ad8491de169841277d18f2a299e
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.drawInfo
  Main.main
  Main.processLine
module dependencies: BotGame HumanGame Logic
package dependencies: StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-LxClHUTiKUUAxWtvJ5Oeoy
                      brick-0.18@brick-0.18-KYaaVCw63PhDYonvtgldK3
                      bytes-0.15.3@bytes-0.15.3-JnJk9rvpCHsKPq5vbMmKHS
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      call-stack-0.1.0@call-stack-0.1.0-FYVrCPXGP9EGAuTW32963O
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      comonad-5.0.2@comonad-5.0.2-Fq9Xy9jdx6uIyJZn00E6Yc
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-29zF0Im431177ovfbHYCGv
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      distributive-0.5.3@distributive-0.5.3-IX4kyVcHAyoH4uFYrsjY1R
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      filepath-1.4.1.1@filepath-1.4.1.1
                      free-4.12.4@free-4.12.4-C2gBQV0m8J42HxqSLTFyVx
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX
                      lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW
                      linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p
                      microlens-0.4.8.1@microlens-0.4.8.1-BVhsezHoPw9Ez18LAXVtpM
                      microlens-mtl-0.1.11.0@microlens-mtl-0.1.11.0-9MGmPSS1MMRHOvHzdJaq9s
                      microlens-th-0.4.1.1@microlens-th-0.4.1.1-DWxGvZm1QBXHYYQf0fHp0m
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-BhL9U5k7NtGJn1itwIHt2Y
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      profunctors-5.2.1@profunctors-5.2.1-Ga89Nyw0d7LBEIoX4AZ6gT
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      semigroupoids-5.2.1@semigroupoids-5.2.1-Db8txM8kTsI6Y49CY6g5Jn
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      terminfo-0.4.1.0@terminfo-0.4.1.0-FNScbjwxa2Y3p4e5RvG3l
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      th-abstraction-0.2.6.0@th-abstraction-0.2.6.0-HRFJgpoqs5HJ5LgHnjmMhQ
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unix-2.7.2.1@unix-2.7.2.1
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
                      vty-5.16@vty-5.16-GzR0fw55Xlq9AKUx6PSwHv
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         brick-0.18@brick-0.18-KYaaVCw63PhDYonvtgldK3:Brick.Types
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.Instances
         reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4:Data.Reflection
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
family instance modules: adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp:Data.Functor.Rep
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Biff
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Clown
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Fix
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Flip
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Join
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Joker
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Product
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Sum
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Tannen
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Wrapped
                         bytes-0.15.3@bytes-0.15.3-JnJk9rvpCHsKPq5vbMmKHS:Data.Bytes.Get
                         bytes-0.15.3@bytes-0.15.3-JnJk9rvpCHsKPq5vbMmKHS:Data.Bytes.Signed
                         bytes-0.15.3@bytes-0.15.3-JnJk9rvpCHsKPq5vbMmKHS:Data.Bytes.VarInt
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX:Data.Functor.Day
                         kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX:Data.Functor.Yoneda
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.At
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Internal.Indexed
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Reified
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Tuple
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Wrapped
                         lens-4.15.4@lens-4.15.4-Km66e7WFRbEC7HnDdV2JDW:Control.Lens.Zoom
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V1
                         linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V2
                         microlens-0.4.8.1@microlens-0.4.8.1-BVhsezHoPw9Ez18LAXVtpM:Lens.Micro.Internal
                         microlens-mtl-0.1.11.0@microlens-mtl-0.1.11.0-9MGmPSS1MMRHOvHzdJaq9s:Lens.Micro.Mtl.Internal
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         profunctors-5.2.1@profunctors-5.2.1-Ga89Nyw0d7LBEIoX4AZ6gT:Data.Profunctor.Rep
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         th-abstraction-0.2.6.0@th-abstraction-0.2.6.0-HRFJgpoqs5HJ5LgHnjmMhQ:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
                         vty-5.16@vty-5.16-GzR0fw55Xlq9AKUx6PSwHv:Graphics.Vty.Image.Internal
                         vty-5.16@vty-5.16-GzR0fw55Xlq9AKUx6PSwHv:Graphics.Vty.Input.Events
import  -/  base-4.9.1.0:Data.Tuple 7dc4bbb45d2e69c991ffac438beeca11
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO c9de64c5f5407c4cf1c52500c4d15200
import  -/  brick-0.18@brick-0.18-KYaaVCw63PhDYonvtgldK3:Brick e2a3fb09c74a952e5abacbc620ec0b00
import  -/  brick-0.18@brick-0.18-KYaaVCw63PhDYonvtgldK3:Brick.BChan 87ea65aaf0d42481dc99bd669150c58b
import  -/  brick-0.18@brick-0.18-KYaaVCw63PhDYonvtgldK3:Brick.Main d0d9d5e5942ff9efa2fbd0787bd03cd7
import  -/  brick-0.18@brick-0.18-KYaaVCw63PhDYonvtgldK3:Brick.Types 5650510519c2681f9a04cee798296505
import  -/  brick-0.18@brick-0.18-KYaaVCw63PhDYonvtgldK3:Brick.Util 68dcfbfa78970336e5e7c2114aedbfec
import  -/  brick-0.18@brick-0.18-KYaaVCw63PhDYonvtgldK3:Brick.Widgets.Border a0f69eada82d2170e87954912f42b1ba
import  -/  brick-0.18@brick-0.18-KYaaVCw63PhDYonvtgldK3:Brick.Widgets.Border.Style c0e1d5581c0fbadb737040de9c33e315
import  -/  brick-0.18@brick-0.18-KYaaVCw63PhDYonvtgldK3:Brick.Widgets.Center 6d8547033b34549a1b43dfa188c8c741
import  -/  brick-0.18@brick-0.18-KYaaVCw63PhDYonvtgldK3:Brick.Widgets.Core 23b4767a9d80fef5513700535a0d852b
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Sequence c9764451c7ea31b534e87988fc642948
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  linear-1.20.7@linear-1.20.7-Hm7B9kQS5iJ4TZVBdSCC2p:Linear.V2 84a63a6b3f6e8f8486d121e776ecbcc6
import  -/  BotGame fd99493413e24fcb3a1eba35c3a4885d
  exports: 7c5c0324f3847dad746020087c90a03a
  botPlayer2 048b2d9c3fa758a1d3ebf3554315f9b6
import  -/  HumanGame 18a6c1b3992ad414cb9f5484ce2dd646
  exports: 18f3938ba77c9bd14cafbce22eb2d9ca
  humanPlayer 83df45acf9c3347b513aaa61d1d2a787
import  -/  Logic 545c175fafda510b0a91387b10806c1d
  exports: d7fcd43ac92c4a99ecfbfe9a24033644
import  -/  vty-5.16@vty-5.16-GzR0fw55Xlq9AKUx6PSwHv:Graphics.Vty d09911cf98d07946a5d45e866f2393bc
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
9b3821e01386c4f4e3d5139962a654fb
  $wc ::
    (GHC.Base.String, GHC.Base.String)
    -> (# Brick.Types.Size, Brick.Types.Size,
          Brick.Types.RenderM () (Brick.Types.Internal.Result ()) #)
  {- Arity: 1, Strictness: <L,U(1*U,1*U)>, Inline: [0],
     Unfolding: (\ (w :: (GHC.Base.String, GHC.Base.String)) ->
                 Brick.Widgets.Core.$wrenderBox
                   @ ()
                   (Brick.Widgets.Core.hBoxRenderer @ ())
                   (GHC.Types.:
                      @ (Brick.Types.Widget ())
                      (case Brick.Widgets.Core.$wpadRight
                              @ ()
                              Brick.Types.Max
                              (case Brick.Widgets.Core.$wpadLeft
                                      @ ()
                                      Main.drawInfo15
                                      (case Brick.Widgets.Core.$wstr
                                              @ ()
                                              (case w of wild { (,) x ds ->
                                               x }) of ww { (#,,#) ww1 ww2 ww3 ->
                                       Brick.Types.Widget
                                         @ ()
                                         ww1
                                         ww2
                                         ww3 }) of ww { (#,,#) ww1 ww2 ww3 ->
                               Brick.Types.Widget
                                 @ ()
                                 ww1
                                 ww2
                                 ww3 }) of ww { (#,,#) ww1 ww2 ww3 ->
                       Brick.Types.Widget @ () ww1 ww2 ww3 })
                      (GHC.Types.:
                         @ (Brick.Types.Widget ())
                         (case Brick.Widgets.Core.$wpadLeft
                                 @ ()
                                 Brick.Types.Max
                                 (case Brick.Widgets.Core.$wpadRight
                                         @ ()
                                         Main.drawInfo15
                                         (case Brick.Widgets.Core.$wstr
                                                 @ ()
                                                 (case w of wild { (,) ds y ->
                                                  y }) of ww { (#,,#) ww1 ww2 ww3 ->
                                          Brick.Types.Widget
                                            @ ()
                                            ww1
                                            ww2
                                            ww3 }) of ww { (#,,#) ww1 ww2 ww3 ->
                                  Brick.Types.Widget
                                    @ ()
                                    ww1
                                    ww2
                                    ww3 }) of ww { (#,,#) ww1 ww2 ww3 ->
                          Brick.Types.Widget @ () ww1 ww2 ww3 })
                         (GHC.Types.[] @ (Brick.Types.Widget ()))))) -}
cbd222fd3bdfd65b0f63e2a09770165c
  $wfail ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,A>b, Inline: [0] -}
66b5a325c071390cac3d32a20f193d62
  drawInfo :: Brick.Types.Widget ()
  {- Strictness: m,
     Unfolding: (Brick.Types.Widget
                   @ ()
                   Main.drawInfo34
                   Main.drawInfo33
                   Main.drawInfo1
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <*>_N
                             <Brick.Types.Internal.Context>_R
                             <Control.Monad.Trans.State.Lazy.State
                                (Brick.Types.Internal.RenderState ())>_R
                             <Brick.Types.Internal.Result ()>_N))) -}
3ce867f76b163cb725c5613b5dcce146
  drawInfo1 ::
    Brick.Types.Internal.Context
    -> Control.Monad.Trans.State.Lazy.State
         (Brick.Types.Internal.RenderState ())
         (Brick.Types.Internal.Result ())
  {- Arity: 1, Strictness: <L,1*U(U,U,U,A,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Brick.Types.Internal.Context) ->
                 case Main.drawInfo_w1 of wild { Brick.Types.Widget ds1 ds2 ds3 ->
                 ds3
                   `cast`
                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                      <*>_N
                      <Brick.Types.Internal.Context>_R
                      <Control.Monad.Trans.State.Lazy.State
                         (Brick.Types.Internal.RenderState ())>_R
                      <Brick.Types.Internal.Result ()>_N)
                   (case x of wild1 { Brick.Types.Internal.Context x1 x2 x3 x4 x5 ->
                    Brick.Types.Internal.Context
                      x1
                      x2
                      x3
                      Brick.Widgets.Border.Style.unicodeBold
                      x5 }) }) -}
2928252685bdae1f131a0f0a45145cd9
  drawInfo10 :: [Brick.Types.Widget ()]
  {- Unfolding: (GHC.Types.:
                   @ (Brick.Types.Widget ())
                   Main.drawInfo11
                   (GHC.Types.[] @ (Brick.Types.Widget ()))) -}
cc9319744c4b8857eaca87c6423188cf
  drawInfo11 :: Brick.Types.Widget ()
  {- Unfolding: (case Main.$wc
                        Main.drawInfo12 of ww { (#,,#) ww1 ww2 ww3 ->
                 Brick.Types.Widget @ () ww1 ww2 ww3 }) -}
046980278ed4f0a12e4178c1381fcda5
  drawInfo12 :: ([GHC.Types.Char], [GHC.Types.Char])
  {- Unfolding: ((Main.drawInfo14, Main.drawInfo13)) -}
88fbea990f024bf474b3284752ecc9ad
  drawInfo13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "monte carlo bot"#) -}
f3a67c3b85e3abe5c568de4aaca690fc
  drawInfo14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "m"#) -}
5bce67f6c71c0ba2ace0baf6816caf8c
  drawInfo15 :: Brick.Types.Padding
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Brick.Types.Pad Main.drawInfo16) -}
bf2a4d01cdeb7d9c8b358ce9c288f415
  drawInfo16 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
c4ffb8bb7728cd3f51e77111c19c9ce2
  drawInfo17 :: Brick.Types.Widget ()
  {- Unfolding: (case Main.$wc
                        Main.drawInfo18 of ww { (#,,#) ww1 ww2 ww3 ->
                 Brick.Types.Widget @ () ww1 ww2 ww3 }) -}
844c23d86e712d332f8bb0ae05cf9356
  drawInfo18 :: ([GHC.Types.Char], [GHC.Types.Char])
  {- Unfolding: ((Main.drawInfo20, Main.drawInfo19)) -}
74ff53813fee8eb5500d67ab95209ad1
  drawInfo19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Random Bot"#) -}
dbb07e7463d96e00dcee2265ca8a920d
  drawInfo2 :: Brick.Types.Widget ()
  {- Unfolding: (Brick.Types.Widget
                   @ ()
                   Brick.Types.Fixed
                   Brick.Types.Fixed
                   Main.drawInfo3
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <*>_N
                             <Brick.Types.Internal.Context>_R
                             <Control.Monad.Trans.State.Lazy.State
                                (Brick.Types.Internal.RenderState ())>_R
                             <Brick.Types.Internal.Result ()>_N))) -}
c4782cf99ae2ec30c98eb7bbe71064b9
  drawInfo20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "r"#) -}
dec182812e3f5e1240ece1cd7843b21f
  drawInfo21 :: Brick.Types.Widget ()
  {- Unfolding: (case Main.$wc
                        Main.drawInfo22 of ww { (#,,#) ww1 ww2 ww3 ->
                 Brick.Types.Widget @ () ww1 ww2 ww3 }) -}
da5b7fd7fa0aa295d961288e7fca3965
  drawInfo22 :: ([GHC.Types.Char], [GHC.Types.Char])
  {- Unfolding: ((Main.drawInfo24, Main.drawInfo23)) -}
504a68e618cade754269a51ca6525e4f
  drawInfo23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Up Bot (Always moves up)"#) -}
664e6bd718df5da95224dde0acbb92a1
  drawInfo24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "u"#) -}
2529ceff3fb2cee6499aca9c22a3aad8
  drawInfo25 :: Brick.Types.Widget ()
  {- Unfolding: (case Main.$wc
                        Main.drawInfo26 of ww { (#,,#) ww1 ww2 ww3 ->
                 Brick.Types.Widget @ () ww1 ww2 ww3 }) -}
4ef8f9a2e5b0ecbde269f48907ba4b3e
  drawInfo26 :: ([GHC.Types.Char], [GHC.Types.Char])
  {- Unfolding: ((Main.drawInfo28, Main.drawInfo27)) -}
5c0f5087de31247695bdafc7bcc91834
  drawInfo27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Human Player (YOU!)"#) -}
37f245a05496578494c4b46e02d5aa89
  drawInfo28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "h"#) -}
4d3b03b045f5aed75b7f8e8530db7305
  drawInfo29 :: GHC.Base.Maybe (Brick.Types.Widget ())
  {- Unfolding: (GHC.Base.Just
                   @ (Brick.Types.Widget ())
                   Main.drawInfo30) -}
c89158782911cee518bbb6fb5a9db4cb
  drawInfo3 ::
    Brick.Types.Internal.Context
    -> Control.Monad.Trans.State.Lazy.State
         (Brick.Types.Internal.RenderState ())
         (Brick.Types.Internal.Result ())
  {- Arity: 1,
     Unfolding: (\ (x :: Brick.Types.Internal.Context) ->
                 Main.drawInfo_f1
                   (case x of wild { Brick.Types.Internal.Context x1 x2 x3 x4 x5 ->
                    Brick.Types.Internal.Context x1 Main.drawInfo_w x3 x4 x5 })) -}
5d6ffd46270ff54c60d274bd4b5cd682
  drawInfo30 :: Brick.Types.Widget ()
  {- Unfolding: (case Brick.Widgets.Core.$wstr
                        @ ()
                        Main.drawInfo31 of ww { (#,,#) ww1 ww2 ww3 ->
                 Brick.Types.Widget @ () ww1 ww2 ww3 }) -}
058b983fa9a0ecf7b33ff0afea1c5b29
  drawInfo31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "First hit enter. Then type which player you are."#) -}
b5141ba0069790611bdfb1b5b7bbf834
  drawInfo32 :: Brick.Types.Size
  {- Unfolding: (case Main.drawInfo_w3 of wild { Brick.Types.Widget ds1 ds2 ds3 ->
                 ds1 }) -}
85b66c76e6e2c0e795b3624d0538fe8a
  drawInfo33 :: Brick.Types.Size
  {- Unfolding: (case Main.drawInfo_w1 of wild { Brick.Types.Widget ds1 ds2 ds3 ->
                 ds2 }) -}
5ca05e29c5c3ccfe79b9a29891249ea9
  drawInfo34 :: Brick.Types.Size
  {- Unfolding: (case Main.drawInfo_w1 of wild { Brick.Types.Widget ds1 ds2 ds3 ->
                 ds1 }) -}
0c2ae398ab1e0b66e6d480c2c3f7ab0c
  drawInfo4 :: Brick.Types.Widget ()
  {- Unfolding: (Brick.Types.Widget
                   @ ()
                   Main.drawInfo32
                   Brick.Types.Fixed
                   Main.drawInfo5
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <*>_N
                             <Brick.Types.Internal.Context>_R
                             <Control.Monad.Trans.State.Lazy.State
                                (Brick.Types.Internal.RenderState ())>_R
                             <Brick.Types.Internal.Result ()>_N))) -}
f4549b2a37e9f1830217ef5d138f408b
  drawInfo5 ::
    Brick.Types.Internal.Context
    -> Control.Monad.Trans.State.Lazy.State
         (Brick.Types.Internal.RenderState ())
         (Brick.Types.Internal.Result ())
  {- Arity: 1,
     Unfolding: (\ (x :: Brick.Types.Internal.Context) ->
                 Main.drawInfo_f2
                   (case x of wild { Brick.Types.Internal.Context x1 x2 x3 x4 x5 ->
                    Brick.Types.Internal.Context x1 x2 Main.drawInfo_w2 x4 x5 })) -}
a8785cdcf620fa8829fa07e022ee7988
  drawInfo6 :: Brick.Types.Widget ()
  {- Unfolding: (case Brick.Widgets.Core.$wrenderBox
                        @ ()
                        (Brick.Widgets.Core.vBoxRenderer @ ())
                        Main.drawInfo7 of ww { (#,,#) ww1 ww2 ww3 ->
                 Brick.Types.Widget @ () ww1 ww2 ww3 }) -}
977801dfef658bdd66732f4654d3af8e
  drawInfo7 :: [Brick.Types.Widget ()]
  {- Unfolding: (GHC.Types.:
                   @ (Brick.Types.Widget ())
                   Main.drawInfo25
                   Main.drawInfo8) -}
5eee3ec8677ce75055f3074e93890b7a
  drawInfo8 :: [Brick.Types.Widget ()]
  {- Unfolding: (GHC.Types.:
                   @ (Brick.Types.Widget ())
                   Main.drawInfo21
                   Main.drawInfo9) -}
98ebecf3c9270a605f099885cde68102
  drawInfo9 :: [Brick.Types.Widget ()]
  {- Unfolding: (GHC.Types.:
                   @ (Brick.Types.Widget ())
                   Main.drawInfo17
                   Main.drawInfo10) -}
249d1fb77bc71ef933c3847adbee8e8b
  drawInfo_f1 ::
    Brick.Types.Internal.Context
    -> Control.Monad.Trans.State.Lazy.State
         (Brick.Types.Internal.RenderState ())
         (Brick.Types.Internal.Result ())
  {- Unfolding: (case Brick.Widgets.Internal.$wcropToContext
                        @ ()
                        Main.drawInfo4 of ww { (#,,#) ww1 ww2 ww3 ->
                 ww3
                   `cast`
                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                      <*>_N
                      <Brick.Types.Internal.Context>_R
                      <Control.Monad.Trans.State.Lazy.State
                         (Brick.Types.Internal.RenderState ())>_R
                      <Brick.Types.Internal.Result ()>_N) }) -}
98264ac790d7ba31d14c6059d6881ffb
  drawInfo_f2 ::
    Brick.Types.Internal.Context
    -> Control.Monad.Trans.State.Lazy.State
         (Brick.Types.Internal.RenderState ())
         (Brick.Types.Internal.Result ())
  {- Unfolding: (case Brick.Widgets.Internal.$wcropToContext
                        @ ()
                        Main.drawInfo_w3 of ww { (#,,#) ww1 ww2 ww3 ->
                 ww3
                   `cast`
                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                      <*>_N
                      <Brick.Types.Internal.Context>_R
                      <Control.Monad.Trans.State.Lazy.State
                         (Brick.Types.Internal.RenderState ())>_R
                      <Brick.Types.Internal.Result ()>_N) }) -}
4c41c3a41ba08659746f1982b1dcd39a
  drawInfo_w :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 80#) -}
3b807b33db6bcf4b312cefb1b43937fd
  drawInfo_w1 :: Brick.Types.Widget ()
  {- Unfolding: (case Brick.Widgets.Center.$whCenterWith
                        @ ()
                        (GHC.Base.Nothing @ GHC.Types.Char)
                        Main.drawInfo2 of ww { (#,,#) ww1 ww2 ww3 ->
                 Brick.Types.Widget @ () ww1 ww2 ww3 }) -}
acef18f1a97d15182d02817665688fbf
  drawInfo_w2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 400#) -}
37a8782969f4c151b177f763322249b6
  drawInfo_w3 :: Brick.Types.Widget ()
  {- Unfolding: (case Brick.Widgets.Border.$wborder_
                        @ ()
                        Main.drawInfo29
                        Main.drawInfo6 of ww { (#,,#) ww1 ww2 ww3 ->
                 Brick.Types.Widget @ () ww1 ww2 ww3 }) -}
933c1a36e0bb36602a4452d81c5ca176
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
1189e2c06a76acbc1cd1ffa591ccc444
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Brick.Main.$wcustomMain
                        @ ()
                        @ GHC.Prim.Any
                        @ ()
                        GHC.Classes.$fOrd()
                        Brick.Main.defaultMain2
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <Graphics.Vty.Vty>_R))
                        (GHC.Base.Nothing @ (Brick.BChan.BChan GHC.Prim.Any))
                        Main.main9
                        (Brick.Main.neverShowCursor @ () @ ())
                        (Brick.Main.resizeOrQuit1 @ () @ () @ GHC.Prim.Any)
                          `cast`
                        (<()>_R
                         ->_R <Brick.Types.Internal.BrickEvent () GHC.Prim.Any>_R
                         ->_R Trans
                                  (<Brick.Types.Internal.EventRO ()>_R
                                   ->_R Trans
                                            (<Brick.Types.Internal.EventState ()>_R
                                             ->_R Sym (GHC.Types.N:IO[0]
                                                           <(Brick.Types.Internal.Next (),
                                                             Brick.Types.Internal.EventState
                                                               ())>_R))
                                            (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                      <Brick.Types.Internal.EventState ()>_N
                                                      <GHC.Types.IO>_R
                                                      <Brick.Types.Internal.Next ()>_N)))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                 <*>_N
                                                 <Brick.Types.Internal.EventRO ()>_R
                                                 <Control.Monad.Trans.State.Lazy.StateT
                                                    (Brick.Types.Internal.EventState ())
                                                    GHC.Types.IO>_R
                                                 <Brick.Types.Internal.Next ()>_N))
                                       (Sym (Brick.Types.N:EventM[0]
                                                 <()>_N) <Brick.Types.Internal.Next ()>_N)))
                        (Brick.Types.$fApplicativeEventM4 @ () @ ())
                          `cast`
                        (<()>_R
                         ->_R Trans
                                  (<Brick.Types.Internal.EventRO ()>_R
                                   ->_R Trans
                                            (<Brick.Types.Internal.EventState ()>_R
                                             ->_R Sym (GHC.Types.N:IO[0]
                                                           <((),
                                                             Brick.Types.Internal.EventState
                                                               ())>_R))
                                            (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                      <Brick.Types.Internal.EventState ()>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N)))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                 <*>_N
                                                 <Brick.Types.Internal.EventRO ()>_R
                                                 <Control.Monad.Trans.State.Lazy.StateT
                                                    (Brick.Types.Internal.EventState ())
                                                    GHC.Types.IO>_R
                                                 <()>_N))
                                       (Sym (Brick.Types.N:EventM[0] <()>_N) <()>_N)))
                        Brick.Main.simpleMain2
                        GHC.Tuple.()
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 Main.main2 ipv3 ipv2 } }) -}
f56a03484127efa9e639f3c6ae66e453
  main10 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
8915bb8f2efa7641a978416f9b2b32bd
  main2 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (s :: GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case s of wild {
                   [] -> Main.$wfail eta
                   : ds ds1
                   -> case ds of wild1 { GHC.Types.C# ds2 ->
                      case ds2 of ds3 {
                        DEFAULT -> Main.$wfail eta
                        'h'#
                        -> case ds1 of wild2 {
                             [] -> HumanGame.humanPlayer1 eta : ipv ipv1 -> Main.$wfail eta }
                        'm'#
                        -> case ds1 of wild2 {
                             [] -> BotGame.botPlayer1 Main.main3 eta
                             : ipv ipv1 -> Main.$wfail eta } } } }) -}
7ad593b42c9333f235e7ca915e076c2a
  main3 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Base.String Main.main8 Main.main4) -}
40e3cd4330852871c2d42731721be975
  main4 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Base.String Main.main7 Main.main5) -}
9657a5b8cd214f8c2e3e7dddf6e3b6b5
  main5 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.main6
                   (GHC.Types.[] @ GHC.Base.String)) -}
95661e57f89bfbf448f95bf305ac294f
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Right"#) -}
12063938c7da6a9e586ea20aabbcb076
  main7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Down"#) -}
133fa333c5f23ebacbae868f64da61a8
  main8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Up"#) -}
a59ceeb273c5bbf711622af8192d07e3
  main9 :: () -> [Brick.Types.Widget ()]
  {- Arity: 1, Unfolding: (\ (ds :: ()) -> Main.main_x) -}
66aa9597914530ccfdcb6b6009ab73a9
  main_x :: [Brick.Types.Widget ()]
  {- Unfolding: (GHC.Types.:
                   @ (Brick.Types.Widget ())
                   Main.drawInfo
                   (GHC.Types.[] @ (Brick.Types.Widget ()))) -}
77af4f8603f1fb7fa0b317a6e1a4532a
  processLine :: GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main2
                  `cast`
                (<GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

